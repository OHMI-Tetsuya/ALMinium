#!/bin/bash
############################################################
# Smart installer for redmine/chiliproject.
############################################################

export ALM_SRC_DIR=$(cd $(dirname $0);pwd)
export ALM_ETC_DIR=/etc/opt/alminium
export ALM_VAR_DIR=/var/opt/alminium
export INSTALL_DIR=/opt/alminium

export RAILS_ENV=production
RM_VER=3.1.3
RM_ARC=http://www.redmine.org/releases/redmine-${RM_VER}.tar.gz
CPCMD='cp -fr'
RMCMD='rm -fr'

PATH=/usr/local/bin:${PATH}

export ALM_UPGRADE=""
if [ "$1" = "-u" ]
then
  ALM_UPGRADE=y
fi

MEM=`free -t | grep Total | awk '{print $2}'`
if [ $MEM -lt 1000000 ]
then
  echo "メモリが不足しています。"
  echo "ALMiniumのインストールは1GB以上のRAMが利用できるマシン及び仮想マシンに"
  echo "インストールしてください"
  exit
fi

if [ "$USER" != 'root' ]
then
    echo "ALMiniumのインストールはルートユーザで行う必要があります。"
    echo "rootユーザもしくはsudoで実行してください。"
    exit 1
fi

if [ ! -d cache ]
then
    mkdir cache
fi

# OSを確認
export OS=""
export APACHE_CONF_DIR=""
if [ -f /etc/redhat-release ]
then
    APACHE_USER=apache
    APACHE_CONF_DIR=/etc/httpd/conf.d
    MYSQLD='/etc/init.d/mysqld'
    MYSQL='mysql'
    CHK=`egrep "CentOS release 5|Red Hat Enterprise Linux .* 5" /etc/redhat-release`
    if [ "$CHK" != '' ]
    then
        OS='rhel5'
        echo "RHEL 5.x / CentOS 5.x / OEL 5.xが検出されました。"
        echo "RHEL 5.x / CentOS 5.x / OEL 5.xは、サポートされていません。"
        echo "インストールを中止します。"
        exit 1
    fi
    CHK=`egrep "CentOS Linux release 7" /etc/redhat-release`
    if [ "$CHK" != '' ]
    then
        OS='rhel7'
        echo "CentOS 7.x が検出されました。"
        MYSQLD='service mariadb'
    else
        OS='rhel6'
        echo "RHEL 6.x / CentOS 6.x / OEL 6.xが検出されました。"
    fi
elif [ -f /etc/system-release ]
then
    APACHE_USER=apache
    APACHE_CONF_DIR=/etc/httpd/conf.d
    MYSQLD='/etc/init.d/mysqld'
    MYSQL='mysql'
    CHK=`egrep "Amazon Linux AMI" /etc/system-release`
    if [ "$CHK" != '' ]
    then
        OS='rhel6'
        echo "Amazon Linux AMIが検出されました。"
    fi
elif [ -f /etc/debian_version ]
then
    APACHE_USER=www-data
    APACHE_CONF_DIR=/etc/apache2/conf.d
    MYSQLD='/etc/init.d/mysql'
    OS='debian'
    echo "Debian / Ubuntu が検出されました。"
    echo "インストールに失敗するかも知れませんが、お許しくださいm(__)m"
    echo ""
    echo "途中MySQLのパスワードを聞かれたら空のままエンターキーを押してください。"
    echo "MySQLのパスワードを設定するとインストールに失敗します。"
    echo "パスワードを設定したい場合は、ALMiniumのインストール完了後行ってください"
else
    CHK=`sw_vers | awk '$1 = "ProductName"{ _OS = $2 " " $3 " " $4; getline; print _OS,$2; exit }'`
    if [ "$CHK" != '' ]
    then
      APACHE_USER=www
      APACHE_CONF_DIR=/opt/local/apache2/conf
      MYSQLD=/opt/local/share/mysql55/support-files/mysql.server
      MYSQL=mysql
      OS='mac'
      CPCMD='cp -Rf'
      RMCMD='rm -Rf'
      echo "${CHK}が検出されました。"
    else
      echo "サポートされていないOSです。"
      echo "現在サポートされいているOSは、"
      echo ""
      echo "  * Ubuntu 12.04 Server"
      echo "  * Debian GNU/Linux 6.0"
      echo "  * RHEL/Oracle EL/CentOS/SL 6.0/6.1"
      echo "  * Amazon Linux AMI"
      echo "  * Mac OS X 10.7"
      echo "です。"
      exit
    fi
fi


if [ "$ALM_HOSTNAME" = "" ]
then
echo "*******************************************************"
echo "  ホスト名の設定"
echo "*******************************************************"
echo "ホスト名(IPアドレスもしくはDNS名)を入力してください。ホスト名はApacheのバーチャルホストで利用されます。"
echo "例えば、192.168.1.4をホスト名で入力すると、http://192.168.1.4/でアクセスすることになります。"
echo "(上記の設定ではhttp://localhost/では接続できないのでご注意ください)"
echo -n "ホスト名: "
read HOSTNAME
echo ""
echo ""
else
HOSTNAME=$ALM_HOSTNAME
fi

if [ "$SSL" = "" ]
then
echo "*******************************************************"
echo "  SSLのサポート"
echo "*******************************************************"
echo "SSLのサポートを有効にすると、httpsのみの接続を許可します。"
echo "httpでのアクセスは、全てhttpsのポートへ転送されるようになります。"
echo "SSLの証明書は認証機関により署名されたものではありません。通信の暗号化のみ"
echo "に利用します。"
echo "gitの利用では、"
echo ""
echo "  $ git config --global http.sslVerify false"
echo ""
echo "などのコマンドで、SSLの証明書を無効にする必要があります。"
echo ""
echo -n "SSL(https)サポートを有効にしますか?(y/N) "
read SSL
echo ""
echo ""
fi

if [ "$ALMINIUM_SUBDIR" = "" ]
then
echo "*******************************************************"
echo "  サブディレクトリで利用  "
echo "*******************************************************"
echo "サブディレクトリで利用するを選択するとhttp[s]://(サーバー名)/alminium"
echo "でアクセスすることができます。"
echo -n "サブディレクトリで利用しますか?(y/N) "
read ALMINIUM_SUBDIR
echo ""
echo ""
fi

# source inst-script/config-email.sh

if [ -e jenkins/setup/$OS/install.sh -a "$ENABLE_JENKINS" = "" ]
then
  echo -n "継続的インテグレーションツールのJenkinsのインストール・設定を"
  echo -n "行うことができます。デフォルトはインストールしません。"
  echo -n "よく分からなければNを選択してください。"
  echo -n ""
  echo -n "Jenkinsをインストールしますか?[y/N]"
  read ENABLE_JENKINS
fi

# update submodules
if [ $(git config -l | egrep 'submodule.+url=' | wc -l) -ne \
     $(grep submodule .gitmodules | wc -l) ]
then
  git submodule init
fi
git submodule sync
git submodule update

# install packages
if [ ! -f packages.installed ]
then
  echo "*** run $OS's pre-install script ***"
  source inst-script/$OS/pre-install
  touch packages.installed
fi

if [ ! -f gems.installed ]
then
  echo "*** run gems script ***"
  source inst-script/gems
  touch gems.installed
fi

export RAKE=`which rake2.0`

if [ "$RAKE" = "" ]
then
  RAKE=rake
fi

# setup database
$MYSQLD start

if [ "$MYSQL" = "" ]
then
  MYSQL=`which mysql`
  if [ "$MYSQL" = "" ]
  then
    MYSQL=`which mysql5`
  fi
fi

if [ "$ALM_UPGRADE" = "" ]
then
  # create DB
  $MYSQL < redmine/setup/createdb.sql

  # setup for apache
  mkdir -p $ALM_ETC_DIR
  for FILE in $(ls -F -I *.conf etc | grep -v /)
  do
    cp "etc/$FILE" $ALM_ETC_DIR/
  done

  # create directory for vcs
  mkdir -p $ALM_VAR_DIR/{git,svn,hg,maven,github}
  chown -R $APACHE_USER:$APACHE_USER $ALM_VAR_DIR

  # install redmine
  mkdir -p $INSTALL_DIR

fi

# install Redmine
echo "*** install Redmine ***"
cd cache
wget $RM_ARC
if [ ! -f redmine-$RM_VER ]
then
  tar zxf redmine-$RM_VER.tar.gz
fi
cd ..

$CPCMD cache/redmine-$RM_VER/* $INSTALL_DIR/
$RMCMD cache/redmine-$RM_VER

cp     redmine/Gemfile.local   $INSTALL_DIR/
$CPCMD redmine/config/*        $INSTALL_DIR/config/
$CPCMD redmine/public/themes/* $INSTALL_DIR/public/themes/

# install plugins
echo "*** install plugins ***"
source redmine/setup/redmine-plugins

if [ "$ALM_UPGRADE" = "" ]
then
  # Customize
  echo "*** run initialize SQL ***"
  $MYSQL alminium < redmine/setup/init.mysql
fi

# install hooks
mkdir -p $INSTALL_DIR/bin
$CPCMD redmine/bin/* $INSTALL_DIR/bin/
if [ ! "$ALMINIUM_SUBDIR" = "" ]
then
  mv $INSTALL_DIR/bin/alm-sync-scm $INSTALL_DIR/bin/alm-sync-scm.org
  cat $INSTALL_DIR/bin/alm-sync-scm.org | \
  sed 's/localhost/localhost\/alminium/g' > $INSTALL_DIR/bin/alm-sync-scm
  chmod +x $INSTALL_DIR/bin/alm-sync-scm
fi
$CPCMD redmine/hooks $INSTALL_DIR/
chown -R $APACHE_USER:$APACHE_USER $INSTALL_DIR

# setup for jenkins
if [ "$ENABLE_JENKINS" = "y" ]
then
  echo "*** install Jenkins ***"
  source jenkins/setup/$OS/install.sh
  if [ "$ALM_UPGRADE" = "" ]
  then
    source jenkins/setup/config.sh
  fi
fi

echo "*** run post-install script ***"
source inst-script/$OS/post-install

# for SUBDIRECTORY
if [ "$ALMINIUM_SUBDIR" != "" ]
then
  ln -sf $INSTALL_DIR/public /var/www/html/alminium
fi

# プロジェクト作成時に自動的にリポジトリを作成するときに利用
#CHK=`egrep "reposman" /var/spool/cron/root`
#if [ "$CHK" = '' ]
#then
#  echo "* * * * * /opt/alminium/extra/svn/reposman.rb -g apache -o apache -s /var/opt/alminium/git -u /var/opt/alminium/git -r localhost --scm git" >> /var/spool/cron/root
#fi

