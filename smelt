#!/bin/bash
############################################################
# Smart installer for redmine/chiliproject.
############################################################
ALM_SRC_DIR=$(cd $(dirname $0);pwd)
ALM_ETC_DIR=/etc/opt/alminium
ALM_VAR_DIR=/var/opt/alminium
ALM_INSTALL_DIR=/opt/alminium
ALM_ENABLE_AUTO_BACKUP=${ALM_ENABLE_AUTO_BACKUP:-y}

RAILS_ENV=production
if [ "$RM_VER" = "" ]; then
  RM_VER="`cat RM_VERSION`"
fi
RM_ARC=http://www.redmine.org/releases/redmine-${RM_VER}.tar.gz
CPCMD='cp -fr'
RMCMD='rm -fr'

PATH=/usr/local/bin:${PATH}

if [ "$1" = "-u" ]; then
  ALM_UPGRADE=y
else
  ALM_UPGRADE=""
fi

MEM=`free -t | grep Total | awk '{print $2}'`
if [ $MEM -lt 1000000 ]; then
  echo "メモリが不足しています。"
  echo "ALMiniumのインストールは1GB以上のRAMが利用できるマシン及び仮想マシンに"
  echo "インストールしてください"
  exit
fi

USER=${USER:-`whoami`}
if [ "$USER" != 'root' ]; then
    echo "ALMiniumのインストールはルートユーザで行う必要があります。"
    echo "rootユーザもしくはsudoで実行してください。"
    exit 1
fi

# ネットワーク0のデバイス名
ETH0=eth0

# OSを確認
if [ -f /etc/redhat-release ]; then
    APACHE_USER=apache
    APACHE_CONF_DIR=/etc/httpd/conf.d
    MYSQLD='/etc/init.d/mysqld'
    MYSQL='mysql'
    CHK=`egrep "CentOS release 5|Red Hat Enterprise Linux .* 5" /etc/redhat-release`
    if [ "$CHK" != '' ]; then
        OS='rhel5'
        echo "RHEL 5.x / CentOS 5.x / OEL 5.xが検出されました。"
        echo "RHEL 5.x / CentOS 5.x / OEL 5.xは、サポートされていません。"
        echo "インストールを中止します。"
        exit 1
    fi
    CHK=`egrep "CentOS Linux release 7" /etc/redhat-release`
    if [ "$CHK" != '' ]; then
        OS='rhel7'
        echo "CentOS 7.x が検出されました。"
        MYSQLD='service mariadb'
        ETH0=enp0s3
    else
        OS='rhel6'
        echo "CentOS 6.xが検出されました。"
        #echo "RHEL 6.x / CentOS 6.x / OEL 6.xが検出されました。"
    fi
#elif [ -f /etc/system-release ]; then
#    APACHE_USER=apache
#    APACHE_CONF_DIR=/etc/httpd/conf.d
#    MYSQLD='/etc/init.d/mysqld'
#    MYSQL='mysql'
#    CHK=`egrep "Amazon Linux AMI" /etc/system-release`
#    if [ "$CHK" != '' ]; then
#        OS='rhel6'
#        echo "Amazon Linux AMIが検出されました。"
#    fi
elif [ -f /etc/debian_version -a "`grep 14.04 /etc/issue`" != "" ]; then
    APACHE_USER=www-data
    APACHE_CONF_DIR=/etc/apache2/conf.d
    MYSQLD='/etc/init.d/mysql'
    MYSQL='mysql'
    OS='debian'
    echo "Ubuntu 14.04 が検出されました。"
    #echo "Debian / Ubuntu が検出されました。"
    #echo "インストールに失敗するかも知れませんが、お許しくださいm(__)m"
    echo ""
    echo "途中MySQLのパスワードを聞かれたら空のままエンターキーを押してください。"
    echo "MySQLのパスワードを設定するとインストールに失敗します。"
    echo "パスワードを設定したい場合は、ALMiniumのインストール完了後行ってください"
elif [ -f /etc/lsb-release -a "`grep 16.04 /etc/lsb-release`" != "" ]; then
    APACHE_USER=www-data
    APACHE_CONF_DIR=/etc/apache2/conf.d
    MYSQLD='/etc/init.d/mysql'
    MYSQL='mysql'
    OS='ubuntu1604'
    ETH0=enp0s3
    if [ ! -f jenkins/setup/ubuntu1604 ]; then
      ln -s debian jenkins/setup/ubuntu1604
    fi
    echo "Ubuntu 16.04 が検出されました。"
    echo ""
    echo "途中MySQLのパスワードを聞かれたら空のままエンターキーを押してください>。"
    echo "MySQLのパスワードを設定するとインストールに失敗します。"
    echo "パスワードを設定したい場合は、ALMiniumのインストール完了後行ってください"
else
    #CHK=`sw_vers | awk '$1 = "ProductName"{ _OS = $2 " " $3 " " $4; getline; print _OS,$2; exit }'`
    #if [ "$CHK" != '' ]; then
    #  APACHE_USER=www
    #  APACHE_CONF_DIR=/opt/local/apache2/conf
    #  MYSQLD=/opt/local/share/mysql55/support-files/mysql.server
    #  MYSQL=mysql
    #  OS='mac'
    #  CPCMD='cp -Rf'
    #  RMCMD='rm -Rf'
    #  echo "${CHK}が検出されました。"
    #else
      echo "サポートされていないOSです。"
      echo "現在サポートされいているOSは、"
      echo ""
      echo "  * Ubuntu 14.04"
      echo "  * CentOS 6.0/7.0"
      #echo "  * Debian GNU/Linux 6.0"
      #echo "  * RHEL/Oracle EL/CentOS/SL 6.0/6.1"
      #echo "  * Amazon Linux AMI"
      #echo "  * Mac OS X 10.7"
      echo "です。"
      exit
    #fi
fi

if [ "$ALM_HOSTNAME" = "" ]; then
  echo "*******************************************************"
  echo "  ホスト名の設定"
  echo "*******************************************************"
  echo "ホスト名(IPアドレスもしくはDNS名)を入力してください。ホスト名はApacheのバーチャルホストで利用されます。"
  echo "例えば、192.168.1.4をホスト名で入力すると、http://192.168.1.4/でアクセスすることになります。"
  IP_ADDR="`ip -f inet -o addr show $ETH0 | cut -d\  -f 7 | cut -d/ -f 1`"
  echo -n "ホスト名[$IP_ADDR]:"
  read ALM_HOSTNAME
  ALM_HOSTNAME=${ALM_HOSTNAME:-$IP_ADDR}
  echo ""
fi

if [ "$ALM_ENABLE_SSL" = "" ]; then
  echo "*******************************************************"
  echo "  SSLのサポート"
  echo "*******************************************************"
  echo "SSLのサポートを有効にすると、httpsのみの接続を許可します。"
  echo "httpでのアクセスは、全てhttpsのポートへ転送されるようになります。"
  echo "SSLの証明書は認証機関により署名されたものではありません。通信の暗号化のみ"
  echo "に利用します。"
  echo "gitの利用では、"
  echo ""
  echo "  $ git config --global http.sslVerify false"
  echo ""
  echo "などのコマンドで、SSLの証明書を無効にする必要があります。"
  echo ""
  echo -n "SSL(https)サポートを有効にしますか?(y/N) "
  read ALM_ENABLE_SSL
  echo ""
  echo ""
fi

#
# サブディレクトリ指定
#
if [ "$ALM_RELATIVE_URL_ROOT" = "" ]; then
  echo "*****************************"
  echo "  サブディレクトリ指定  "
  echo "*****************************"
  echo "サブディレクトリを指定すると"
  echo "http[s]://(サーバー名)/(サブディレクトリ)"
  echo "でアクセスすることができます。"
  echo "指定しない場合はそのままEnterキーを押下してください"
  echo -n "サブディレクトリー名："
  read ALM_SUBDIR
  echo ""
  echo ""
else
  ALM_SUBDIR="$ALM_RELATIVE_URL_ROOT"
fi

if [ "$ALM_SUBDIR" != "" ]; then
  if [ `echo $ALM_SUBDIR | cut -c 1` != '/' ]; then
    ALM_SUBDIR="/$ALM_SUBDIR"
  fi
fi

# source inst-script/config-email.sh

if [ -e jenkins/setup/$OS/install.sh -a "$ALM_ENABLE_JENKINS" = "" ]; then
  echo -n "継続的インテグレーションツールのJenkinsのインストール・設定を"
  echo -n "行うことができます。デフォルトはインストールしません。"
  echo -n "よく分からなければNを選択してください。"
  echo -n ""
  echo -n "Jenkinsをインストールしますか?(y/N)"
  read ALM_ENABLE_JENKINS
fi

# update submodules
if [ $(git config -l | egrep 'submodule.+url=' | wc -l) -ne \
     $(grep submodule .gitmodules | wc -l) ]; then
  git submodule init
fi
git submodule sync
git submodule update

# install packages
if [ ! -f packages.installed ]; then
  echo "*** run $OS's pre-install script ***"
  source inst-script/$OS/pre-install
  touch packages.installed
fi

if [ ! -f gems.installed ]; then
  echo "*** run gems script ***"
  source inst-script/gems
  touch gems.installed
fi

RAKE=`which rake2.0`
RAKE=${RAKE:-rake}

# setup database
$MYSQLD start

if [ "$ALM_UPGRADE" = "" ]; then
  # create DB
  $MYSQL < redmine/setup/createdb.sql

  # create directory for vcs
  mkdir -p $ALM_VAR_DIR/{git,svn,hg,maven,github}
  chown -R $APACHE_USER:$APACHE_USER $ALM_VAR_DIR
fi

# setup for apache
mkdir -p $ALM_ETC_DIR
for FILE in $(ls -F -I *.conf etc | grep -v /)
do
  cp "etc/$FILE" $ALM_ETC_DIR/
done

#
# install Redmine
#
mkdir -p $ALM_INSTALL_DIR
echo "*** install Redmine ***"
mkdir -p cache
cd cache
wget $RM_ARC
if [ ! -f redmine-$RM_VER ]; then
  tar zxf redmine-$RM_VER.tar.gz
fi
cd ..

$CPCMD cache/redmine-$RM_VER/* $ALM_INSTALL_DIR/
$RMCMD cache/redmine-$RM_VER

cp     redmine/Gemfile.local   $ALM_INSTALL_DIR/
$CPCMD redmine/config/*        $ALM_INSTALL_DIR/config/
$CPCMD redmine/public/themes/* $ALM_INSTALL_DIR/public/themes/
cp ./{backup,restore} ./inst-script/config-backup $ALM_INSTALL_DIR/
# avoid bandle install error because of nokogiri version conflict
mv $ALM_INSTALL_DIR/Gemfile $ALM_INSTALL_DIR/Gemfile.org
sed "s/gem \"nokogiri\", \">= 1.6.7.2\"/gem \"nokogiri\"#, \">= 1.6.7.2\"/" $ALM_INSTALL_DIR/Gemfile.org > $ALM_INSTALL_DIR/Gemfile
# install plugins
echo "*** install plugins ***"
source redmine/setup/redmine-plugins

if [ "$ALM_UPGRADE" = "" ]; then
  # Customize
  echo "*** run initialize SQL ***"
  $MYSQL alminium < redmine/setup/init.mysql
fi

# install hooks
mkdir -p $ALM_INSTALL_DIR/bin
$CPCMD redmine/bin/* $ALM_INSTALL_DIR/bin/
if [ "$ALM_SUBDIR" != "" ]; then
  mv $ALM_INSTALL_DIR/bin/alm-sync-scm $ALM_INSTALL_DIR/bin/alm-sync-scm.org
  cat $ALM_INSTALL_DIR/bin/alm-sync-scm.org | \
  sed 's/localhost/localhost$ALM_SUBDIR/g' > $ALM_INSTALL_DIR/bin/alm-sync-scm
  chmod +x $ALM_INSTALL_DIR/bin/alm-sync-scm
fi
$CPCMD redmine/hooks $ALM_INSTALL_DIR/
chown -R $APACHE_USER:$APACHE_USER $ALM_INSTALL_DIR

# setup for jenkins
if [ "$ALM_ENABLE_JENKINS" = "y" ]; then
  echo "*** install Jenkins ***"
  source jenkins/setup/$OS/install.sh
  source jenkins/setup/config.sh
fi

echo "*** run post-install script ***"
source inst-script/post-install

# setup for SUBDIRECTORY
if [ "$ALM_SUBDIR" != "" ]; then
  ln -sf $ALM_INSTALL_DIR/public /var/www/html$ALM_SUBDIR
  echo $ALM_SUBDIR > $ALM_INSTALL_DIR/subdirname
fi

# プロジェクト作成時に自動的にリポジトリを作成するときに利用
#CHK=`egrep "reposman" /var/spool/cron/root`
#if [ "$CHK" = '' ]; then
#  echo "* * * * * /opt/alminium/extra/svn/reposman.rb -g apache -o apache -s /var/opt/alminium/git -u /var/opt/alminium/git -r localhost --scm git" >> /var/spool/cron/root
#fi

#
# 定期バックアップ設定
#
if [ "$ALM_ENABLE_AUTO_BACKUP" = "y" ]; then
  cd $ALM_SRC_DIR
  source ./inst-script/config-backup
fi

