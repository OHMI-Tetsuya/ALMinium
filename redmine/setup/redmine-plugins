#!/bin/bash
#
# プラグインをインストールすると同時にRedmineの初期設定を行う
#

# インストールするディレクトリ名
DEST_NAME=(`grep -v "^#" redmine/setup/redmine-plugins.lst | awk -F, '{print $1}'`)

# 展開したアーカイブのディレクトリ名 or タグ名
DIR_NAME=(`grep -v "^#" redmine/setup/redmine-plugins.lst | awk -F, '{print $2}'`)

# URL
URL_NAME=(`grep -v "^#" redmine/setup/redmine-plugins.lst | awk -F, '{print $3}'`)

for (( i = 0; i < ${#DIR_NAME[@]}; ++i ))
do
  FILE_NAME=`echo ${URL_NAME[$i]} | sed -e "s/.*\/\(.*$\)/\1/"`
  EXT=`echo ${URL_NAME[$i]} | sed -e "s/.*\.\(.*$\)/\1/"`
    case $EXT in
    zip)
        if [ ! -f cache/$FILE_NAME ]
        then
          wget -P cache ${URL_NAME[$i]}
        fi
        yes | unzip -q cache/$FILE_NAME
         $RMCMD $INSTALL_DIR/plugins/${DEST_NAME[$i]}
        mv ${DIR_NAME[$i]} $INSTALL_DIR/plugins/${DEST_NAME[$i]}
        rm -f $FILE_NAME
        ;;

    tgz|gz)
        if [ ! -f cache/$FILE_NAME ]
        then
          wget -P cache ${URL_NAME[$i]}
        fi
        tar zxf cache/$FILE_NAME
        $RMCMD $INSTALL_DIR/plugins/${DEST_NAME[$i]}
        mv ${DIR_NAME[$i]} $INSTALL_DIR/plugins/${DEST_NAME[$i]}
        rm -f $FILE_NAME
        ;;
    git)
        if [ ! -d cache/${DEST_NAME[$i]} ]
        then
          git clone ${URL_NAME[$i]} cache/${DEST_NAME[$i]}
        fi
        if [ -d cache/${DEST_NAME[$i]} ]
        then
          cd cache/${DEST_NAME[$i]}
          git checkout ${DIR_NAME[$i]}
          cd ../..
          $RMCMD $INSTALL_DIR/plugins/${DEST_NAME[$i]}
          ${CPCMD}a cache/${DEST_NAME[$i]} $INSTALL_DIR/plugins/
        fi
        ;;
    *)
        if [ ! -d cache/${DEST_NAME[$i]} ]
        then
          if [[ ${URL_NAME[$i]} =~ "bitbucket.org" ]]
          then
            hg clone ${URL_NAME[$i]} cache/${DEST_NAME[$i]}
            cd cache/${DEST_NAME[$i]}
            hg checkout ${DIR_NAME[$i]}
            cd ../..
          else
            svn co ${URL_NAME[$i]} cache/${DEST_NAME[$i]}
            if [ "${DIR_NAME[$i]}" != "HEAD" ]
            then
              cd cache/${DEST_NAME[$i]}
              svn update -r ${DIR_NAME[$i]}
              cd ../..
            fi
          fi
        fi
        $RMCMD $INSTALL_DIR/plugins/${DEST_NAME[$i]}
        ${CPCMD}a cache/${DEST_NAME[$i]} $INSTALL_DIR/plugins/${DEST_NAME[$i]}
        ;;
    esac
done

# ディレクトリを退避
pushd $INSTALL_DIR

# for Hudson
if [ -f plugins/redmine_hudson/Gemfile ]
then
  mv plugins/redmine_hudson/Gemfile plugins/redmine_hudson/Gemfile.org
fi

# アップグレード時にエラーになることがあるので、以下を追加
bundle update

# redmineに必要なgemをインストール
bundle install --path vendor/bundle --without development test

# mod_passengerをインストール
bundle exec passenger-install-apache2-module --auto
bundle exec passenger-install-apache2-module --snippet > $ALM_ETC_DIR/passenger.conf

# セッションストア秘密鍵を生成
bundle exec rake generate_secret_token

# データベース上にテーブルを作成
bundle exec rake db:migrate RAILS_ENV=production
bundle exec rake redmine:plugins:migrate RAILS_ENV=production

# データベースにデフォルトデータを登録
echo 'ja' |\
bundle exec rake redmine:load_default_data RAILS_ENV=production

# キャッシュクリア
bundle exec rake tmp:cache:clear
bundle exec rake tmp:sessions:clear

# for XLS export
if [ -d plugins/redmine_xls_export ]
then
  bundle exec rake redmine:plugins:process_version_change RAILS_ENV=production
fi

# for backlogs
if [ -d plugins/redmine_backlogs ]
then
  TASK_TRACKER_NAME=`mysql -u root alminium --execute="select name from trackers where id=3;" | sed -e '1,1d'`
  bundle exec rake redmine:backlogs:install task_tracker="$TASK_TRACKER_NAME" story_trackers=機能 labels=false RAILS_ENV=production
fi

# FIXME: to avoid open_flash_chart assets aren't copied.
if [ -d plugins/open_flash_chart/assets ]
then
  cp -fr plugins/open_flash_chart/assets public/plugin_assets/open_flash_chart
fi

# ディレクトリを元に戻す
popd

